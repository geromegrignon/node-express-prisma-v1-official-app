name: CI

on:
  workflow_dispatch:
  push:
    branches: [main, limited]
  pull_request:
    branches:
      - '**'

jobs:
  run_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: localUser
          POSTGRES_PASSWORD: localPassword
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci --no-audit --prefer-offline --progress=false
      - name: Check prettier
        run: npm run prettier:check
      - name: Check ESLinter
        run: npm run lint:check
      - name: Check unit tests
        run: npm run test --ci --lastCommit --maxWorkers=50%
        env:
          CI: true
      - name: deploy database
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://localUser:localPassword@localhost:5432/test
      - name: postman
        uses: gothinkster/realworld-api-action@v1.30
        with:
          start: npm start
          url: 'http://localhost:3000/api'
          github_token: ${{ secrets.GITHUB_TOKEN }}
        env:
          DATABASE_URL: postgresql://localUser:localPassword@localhost:5432/test
